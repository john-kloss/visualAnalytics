#b
acc_pca <- acc %>% as.matrix() %>% scale()
acc
acc_pca
acc_res <- prcomp(acc_pca, center = FALSE,  scale. = FALSE)
acc_res
library(ggplot)
library(ggplot2)
cscores <- acc_res$x
df_cscores <- as_tibble(cscores)
library(tibble)
df_cscores <- as_tibble(cscores)
ggplot(df_cscores, aes(PC1, PC2)) + geom_point()
df_cscores
mean(df_cscores$PC2)
mean(df_cscores$PC1)
install.packages()
?dist
dist(mean(df_cscores$PC1))
mat<-dist(mean(df_cscores$PC1))
mat
?rdist
?rdist
library(fields)
mat<-rdist(mean(df_cscores$PC1))
mat
mat<-rdist(mean(df_cscores$PC1),mean(df_cscores$PC2))
mat
?rdist
mat<-rdist(df_cscores$PC,mean(df_cscores$PC2))
install.packages("distances")
library(distances)
dis<-distances(acc)
dis
max_distance_search(dis)
acc_res <- prcomp(acc_pca, center = FALSE,  scale. = FALSE)
cscores <- acc_res$x
df_cscores <- as_tibble(cscores)
ggplot(df_cscores, aes(PC1, PC2)) + geom_point()
cscores <- acc_res$x
cscores
df_cscores
View(df_cscores)
View(df_cscores)
acc_res
mat<-rdist(df_cscores$PC,mean(df_cscores$PC2))
df_cscores
?rev
acc <- read.csv(str_c(dirname(getwd()), "/visualAnalytics/Data/food_consumption_VA.csv"))
food <- read.csv(str_c(dirname(getwd()), "/visualAnalytics/Data/food_consumption_VA.csv"))
View(food)
rev.dendrogram
install.packages("corr")
install.packages("install")
install.packages("corrr")
fo <- food %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
library(corrr)
fo <- food %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
fo <- food %>%
select(-country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
fo
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(fo)
library(corrplot)
corrplot(fo)
?corrplot
corrplot(cor(food %>% select(-Country)), type="upper")
fo
library(corrr)
library(corrplot)
food <- read.csv(str_c(dirname(getwd()), "/visualAnalytics/Data/food_consumption_VA.csv"))
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
fo
corrplot(cor(food %>% select(-Country)), type="upper")
which.max(fo)
View(fo)
View(fo)
for (i in 16){
for (j in 21){
print(fo[i,j])
}
}
which(fo == max(fo), arr.ind = TRUE)
fo<-as.data.frame(fo)
which(fo == max(fo), arr.ind = TRUE)
apply(fo,1,min)
apply(fo,1,max)
apply(fo,15,max)
apply(food,15,max)
apply(food,1,max)
apply(food,10,max)
apply(food,1,max)
apply(food,2,max)
apply(fo,2,max)
apply(fo,2,min)
which.max(food[,2])
which.max(fo[,2])
which.max(fo[,3])
which.max(fo[,4])
which.max(fo)
max.unlist(fo)
max(unlist(fo))
max(unlist(food))
max(unlist(fo))
fo[is.nan(fo)] = 0
fo[fo=="<NA>"] <- "0"
View(fo)
View(fo)
fo<-fo[fo=="<NA>"] <- "0"
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
max(unlist(fo))
max(unlist(food))
for (i in 16){
for (j in 21){
if(is.NA(fo[i,j]))
fo[i,j]<-0
}
}
for (i in 16){
for (j in 21){
if(is.na(fo[i,j]))
fo[i,j]<-0
}
}
View(fo)
View(fo)
View(fo)
View(fo)
for (i in 16){
for (j in 21){
if(is.na(fo[i,j]))
print(foo[i,j])
fo[i,j]<-0
}
}
for (i in 16){
for (j in 21){
if(is.na(fo[i,j])){
print(foo[i,j])
fo[i,j]<-0
}
}
}
View(fo)
View(fo)
for (i in 16){
for (j in 21){
if(!is.na(fo[i,j])){
print(foo[i,j])
fo[i,j]<-0
}
}
}
for (i in 16){
for (j in 21){
if(is.na(fo[i,j])){
print(fo[i,j])
fo[i,j]<-0
}
}
}
?unlist
?max
max(unlist(foodn na.rm=TRUE))
max(unlist(fo),na.rm=TRUE))
max(unlist(fo),na.rm=TRUE)
fo<- fo %>%
select(-Country) %>%
max(unlist(fo),na.rm=TRUE)
fo<- fo %>%
select(-Country) %>%
max(fo,na.rm=TRUE)
which.max(fo,na.rm=TRUE)
max(unlist(fo),na.rm=TRUE)
max(unlist(fo),na.rm=TRUE)
which.max(fo[,])
which.max((unlist(fo)[,])
max(unlist(fo),na.rm=TRUE)
max(unlist(fo),na.rm=TRUE)
fo[!is.na(fo)]<-0
View(fo)
View(fo)
fo[is.na(fo)]<-0
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
food <- read.csv(str_c(dirname(getwd()), "/visualAnalytics/Data/food_consumption_VA.csv"))
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
fo[is.na(fo)]<-0
View(fo)
View(fo)
max(unlist(fo))
for (i in 16){
for (j in 21){
if(max<fo[i,j]){
max<-fo[i,j]
print(max)
}
}
}
View(fo)
View(fo)
max(unlist(fo %>% select(-rowname)))
which.max(unlist(fo %>% select(-rowname)))
which.max(fo%>% select(-rowname))
max(unlist(fo %>% select(-rowname)))
which(fo=max(unlist(fo %>% select(-rowname))))
which(fo==max(unlist(fo %>% select(-rowname))))
which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
max(unlist(fo %>% select(-rowname)))
which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
a <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
fo[a[1,1], a[1,2]]
colnames(a[1,1], a[1,2])
a
fo[a[1,20]]
fo[a[1,20],1]
fo[a[1],1]
fo[a[1,1], a[1,2]]
fo[a[1],1]
print(fo[a[1,1], a[1,2]], fo[a[1],1])
print(fo[a[1,1], a[1,2]] fo[a[1],1])
print(fo[a[1,1], a[1,2]]+ fo[a[1],1])
print(fo[a[1,1], a[1,2]], " ", fo[a[1],1])
print(fo[a[1,1], a[1,2]]
fo[a[1],1])
fo[a[1],1]
fo[a[1,1], a[1,2]]
for (i in 5)
for (i in 5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
fo[max[1,1], max[1,2]]
fo[max[1],1]
}
for (i in 5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
}
for (i in 5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
}
fo[max[1,1], max[1,2]]<-0
for (i in 5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
fo[max[1,1], max[1,2]]<-0
#fo[min[1,1], max[1,2]]
}
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
for (i in 5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
fo[max[1,1], max[1,2]]<-0
fo[min[1,1], min[1,2]]<-0
}
fo[is.na(fo)]<-0
for (i in 5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
fo[max[1,1], max[1,2]]<-0
fo[min[1,1], min[1,2]]<-0
}
for (i in 1:5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
fo[max[1,1], max[1,2]]<-0
fo[min[1,1], min[1,2]]<-0
}
for (i in 1:5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print("max")
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print("min")
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
fo[max[1,1], max[1,2]]<-0
fo[min[1,1], min[1,2]]<-0
}
library(corrr)
library(corrplot)
food <- read.csv(str_c(dirname(getwd()), "/visualAnalytics/Data/food_consumption_VA.csv"))
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
corrplot(cor(food %>% select(-Country)), type="upper")
fo[is.na(fo)]<-0
for (i in 1:5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print("max")
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print("min")
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
fo[max[1,1], max[1,2]]<-0
fo[min[1,1], min[1,2]]<-0
}
a
food_pca <- food %>% as.matrix() %>% scale()
food_pca <- food %>% select(-Country) %>% as.matrix() %>% scale()
food_res <- prcomp(food_pca, center = FALSE,  scale. = FALSE)
cscores <- food_res$x
df_cscores <- as_tibble(cscores)
df_cscores
tibble(explained = food_res$sdev^2/sum(food_res$sdev^2)) %>%
mutate(no = factor(1:nrow(.))) %>%
mutate(cum_explained = cumsum(explained)) %>%
ggplot(aes(no)) +
geom_bar(aes(y = explained), stat = "identity") +
geom_line(aes(y = cum_explained, group = factor(1))) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Principal Component", y = "Variance Explained (%)")
clust<-kmeans(food,centers=4)
library(stats)
clust<-kmeans(food,centers=4)
library(stats)
clust<-kmeans(food,centers=4)
clust<-kmeans(df_scores[,1:2],centers=4)
clust<-kmeans(df_cscores[,1:2],centers=4)
clust
plot(clust)
plot(clust$cluster)
plot(clust$centers)
plot(clust$totss)
plt<-ggplot(food, aes(PC1, PC2, color = cluster,
fill = cluster))+
geom_point()
print(plt)
plt<-ggplot(df_cscores, aes(PC1, PC2, color = cluster,
fill = cluster))+
geom_point()
print(plt)
plt<-ggplot(df_cscores, aes(PC1, PC2, color = clust,
fill = clust))+
geom_point()
print(plt)
df_cscores<-df_cscores %>% mutate(cluster = factor(clust$cluster))
plt<-ggplot(df_cscores, aes(PC1, PC2, color = clust,
fill = clust))+
geom_point()
print(plt)
print(plt)
len(df_cscores$PC1)
nrow(df_cscores$PC1)
length(df_cscores$PC1)
length(df_cscores$PC2)
nrow(df_cscores)
df_cscores<-df_cscores %>% mutate(cluster = factor(clust$cluster))
plt<-ggplot(df_cscores, aes(PC1, PC2, color = clust,
fill = clust))+
geom_point()
ggplot(df_cscores, aes(PC1, PC2, color = clust,
fill = clust))+
geom_point()
ggplot(df_cscores, aes(PC1, PC2))+
geom_point()
ggplot(df_cscores, aes(PC1, PC2))
ggplot(df_cscores, aes(PC1, PC2, color = 4,
fill = clust))+
geom_point()
ggplot(df_cscores, aes(PC1, PC2, colour = clust,
fill = clust))+
geom_point()
ggplot(df_cscores, aes(PC1, PC2, colour = cluster,
fill = cluster))+
geom_point()
ggplot(df_cscores, aes(PC1, PC2, colour = cluster,
fill = cluster))+
geom_point()+ polygon(df_cscores[chull(df_cscores),])
plot(plt)
plt<-ggplot(df_cscores, aes(PC1, PC2, colour = cluster,
fill = cluster))+
geom_point()+ polygon(plt[chull(plt),])
ggplot(df_cscores, aes(PC1, PC2, colour = cluster,
fill = cluster))+
geom_point()
clust<-kmeans(food,centers=4)
clust<-kmeans(food %>% select(-Country),centers=4)
food<-food %>% mutate(cluster = factor(clust$cluster))
ggplot(df_cscores, aes(PC1, PC2, colour = cluster,
fill = cluster))+
geom_point()
ggplot(food, aes(., colour = cluster,
fill = cluster))+
geom_point()
ggplot(food, aes(~., colour = cluster,
fill = cluster))+
geom_point()
ggplot(food, aes(Tea. Buiscuits, colour = cluster,
ggplot(food, aes(Tea, Biscuits, colour = cluster,
fill = cluster))+
geom_point()
library(corrr)
library(corrplot)
library(stats)
food <- read.csv(str_c(dirname(getwd()), "/visualAnalytics/Data/food_consumption_VA.csv"))
fo <- food %>%
select(-Country) %>%
correlate() %>% # create correlation data frame (cor_df)
rearrange() %>%  # rearrange by correlations
shave() # remove upper triangle
corrplot(cor(food %>% select(-Country)), type="upper")
fo[is.na(fo)]<-0
for (i in 1:5){
max <- which(fo==max(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
min <- which(fo==min(unlist(fo %>% select(-rowname))), arr.ind=TRUE)
print("max")
print(fo[max[1,1], max[1,2]])
print(fo[max[1],1])
print("min")
print(fo[min[1,1], min[1,2]])
print(fo[min[1],1])
fo[max[1,1], max[1,2]]<-0
fo[min[1,1], min[1,2]]<-0
}
food_pca <- food %>% select(-Country) %>% as.matrix() %>% scale()
food_res <- prcomp(food_pca, center = FALSE,  scale. = FALSE)
cscores <- food_res$x
df_cscores <- as_tibble(cscores)
df_cscores
#pareto diagram
tibble(explained = food_res$sdev^2/sum(food_res$sdev^2)) %>%
mutate(no = factor(1:nrow(.))) %>%
mutate(cum_explained = cumsum(explained)) %>%
ggplot(aes(no)) +
geom_bar(aes(y = explained), stat = "identity") +
geom_line(aes(y = cum_explained, group = factor(1))) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Principal Component", y = "Variance Explained (%)")
#c
clust<-kmeans(df_cscores[,1:2],centers=4)
df_cscores<-df_cscores %>% mutate(cluster = factor(clust$cluster))
ggplot(df_cscores, aes(PC1, PC2, colour = cluster,
fill = cluster))+
geom_point()
#d
clust<-kmeans(food %>% select(-Country),centers=4)
food<-food %>% mutate(cluster = factor(clust$cluster))
ggplot(food, aes(Tea, Biscuits, colour = cluster,
fill = cluster))+
geom_point()
ggplot(food, aes(Tea, Biscuits,Jam colour = cluster,
ggplot(food, aes(Tea, Biscuits,Jam, colour = cluster,
fill = cluster))+
geom_point()
ggplot(food, aes(Tea, Jam,Biscuit, colour = cluster,
fill = cluster))+
geom_point()
